---
- name: install controller-related neutron packages
  apt: name={{ item }} state=present force=yes
  with_items:
    - neutron-server
    - neutron-plugin-ml2

- name: get tenant id to fill neutron.conf
  shell: keystone --os-token={{ ADMIN_TOKEN }} --os-endpoint=http://{{ identity_host }}:35357/v2.0 tenant-get service | grep id | awk '{print $4}'
  register: NOVA_ADMIN_TENANT_ID

- name: update neutron conf
  template: src=neutron.conf dest=/etc/neutron/neutron.conf backup=yes
  notify:
    - restart neutron-server

- name: update ml2 plugin conf
  template: src=ml2_conf.ini dest=/etc/neutron/plugins/ml2/ml2_conf.ini backup=yes
  notify:
    - restart neutron-server

- meta: flush_handlers
#- name: manually restart nova-api
#  service: name=nova-api state=restarted

#- name: manually restart nova-scheduler
#  service: name=nova-scheduler state=restarted

#- name: manually restart nova-conductor
#  service: name=nova-conductor state=restarted

#- name: manually restart neutron-server
#  service: name=neutron-server state=restarted

- name: place neutron_init.sh under /opt/
  template: src=neutron_init.sh dest=/opt/neutron_init.sh mode=0744

- name: init neutron
  shell: /opt/neutron_init.sh && touch neutron_init_complete || touch neutron_init_failed
  args:
    creates: neutron_init_complete

- name: neutron-db-manage upgrade to Juno
  shell: neutron-db-manage --config-file=/etc/neutron/neutron.conf --config-file=/etc/neutron/plugins/ml2/ml2_conf.ini upgrade head
  notify:
    - restart neutron-server
