<%= node["openstack"]["network"]["custom_template_banner"] %>
[OVS]
# (StrOpt) Type of network to allocate for tenant networks. The
# default value 'local' is useful only for single-box testing and
# provides no connectivity between hosts. You MUST either change this
# to 'vlan' and configure network_vlan_ranges below or change this to
# 'gre' and configure tunnel_id_ranges below in order for tenant
# networks to provide connectivity between hosts. Set to 'none' to
# disable creation of tenant networks.
#
# Default: tenant_network_type = local
# Example: tenant_network_type = gre
tenant_network_type = <%= node["openstack"]["network"]["openvswitch"]["tenant_network_type"] %>

# (ListOpt) Comma-separated list of
# <physical_network>[:<vlan_min>:<vlan_max>] tuples enumerating ranges
# of VLAN IDs on named physical networks that are available for
# allocation. All physical networks listed are available for flat and
# VLAN provider network creation. Specified ranges of VLAN IDs are
# available for tenant network allocation if tenant_network_type is
# 'vlan'. If empty, only gre and local networks may be created.
#
# Default: network_vlan_ranges =
# Example: network_vlan_ranges = physnet1:1000:2999
<% if node["openstack"]["network"]["openvswitch"]["network_vlan_ranges"] -%>
network_vlan_ranges = <%= node["openstack"]["network"]["openvswitch"]["network_vlan_ranges"] %>
<% end -%>

# (BoolOpt) Set to True in the server and the agents to enable support
# for GRE or VXLAN networks. Requires kernel support for OVS patch ports and
# GRE or VXLAN tunneling.
#
# Default: enable_tunneling = False
enable_tunneling = <%= node["openstack"]["network"]["openvswitch"]["enable_tunneling"] %>

# (StrOpt) The type of tunnel network, if any, supported by the plugin. If
# this is set, it will cause tunneling to be enabled. If this is not set and
# the option enable_tunneling is set, this will default to 'gre'.
# 'gre' or 'vxlan'
tunnel_type = <%= node["openstack"]["network"]["openvswitch"]["tunnel_type"] %>

# (ListOpt) Comma-separated list of <tun_min>:<tun_max> tuples
# enumerating ranges of GRE tunnel IDs that are available for tenant
# network allocation if tenant_network_type is 'gre'.
#
# Default: tunnel_id_ranges =
# Example: tunnel_id_ranges = 1:1000
<% if node["openstack"]["network"]["openvswitch"]["tunnel_id_ranges"] -%>
tunnel_id_ranges = <%= node["openstack"]["network"]["openvswitch"]["tunnel_id_ranges"] %>
<% end -%>

# Do not change this parameter unless you have a good reason to.
# This is the name of the OVS integration bridge. There is one per hypervisor.
# The integration bridge acts as a virtual "patch bay". All VM VIFs are
# attached to this bridge and then "patched" according to their network
# connectivity.
#
# Default: integration_bridge = br-int
<% if node["openstack"]["network"]["openvswitch"]["integration_bridge"] -%>
integration_bridge = <%= node["openstack"]["network"]["openvswitch"]["integration_bridge"] %>
<% end -%>

# Only used for the agent if tunnel_id_ranges (above) is not empty for
# the server.  In most cases, the default value should be fine.
#
# Default: tunnel_bridge = br-tun
<% if node["openstack"]["network"]["openvswitch"]["tunnel_bridge"] -%>
tunnel_bridge = <%= node["openstack"]["network"]["openvswitch"]["tunnel_bridge"] %>
<% end -%>

# Peer patch port in integration bridge for tunnel bridge
# Default: int_peer_patch_port = patch-tun
<% if node["openstack"]["network"]["openvswitch"]["int_peer_patch_port"] -%>
int_peer_patch_port = <%= node["openstack"]["network"]["openvswitch"]["int_peer_patch_port"] %>
<% end -%>

# Peer patch port in tunnel bridge for integration bridge
# Default: tun_peer_patch_port = patch-int
<% if node["openstack"]["network"]["openvswitch"]["tun_peer_patch_port"] -%>
tun_peer_patch_port = <%= node["openstack"]["network"]["openvswitch"]["tun_peer_patch_port"] %>
<% end -%>

# Uncomment this line for the agent if tunnel_id_ranges (above) is not
# empty for the server. Set local-ip to be the local IP address of
# this hypervisor.
local_ip = <%= @local_ip %>

# (ListOpt) Comma-separated list of <physical_network>:<bridge> tuples
# mapping physical network names to the agent's node-specific OVS
# bridge names to be used for flat and VLAN networks. The length of
# bridge names should be no more than 11. Each bridge must
# exist, and should have a physical network interface configured as a
# port. All physical networks listed in network_vlan_ranges on the
# server should have mappings to appropriate bridges on each agent.
#
# Default: bridge_mappings =
# Example: bridge_mappings = physnet1:br-eth1
<% if node["openstack"]["network"]["openvswitch"]["bridge_mappings"] -%>
bridge_mappings = <%= node["openstack"]["network"]["openvswitch"]["bridge_mappings"] %>
<% end -%>

[qos]
<% if node['openstack']['network']['openvswitch']['qos_driver']  %>
qos_driver =  <%=  node['openstack']['network']['openvswitch']['qos_driver'] %>
<% end %>

[AGENT]
# Agent's polling interval in seconds
polling_interval = <%= node['openstack']['network']['openvswitch']['polling_interval'] %>
<% if node['openstack']['network']['openvswitch']['tunnel_types'] %>
tunnel_types = <%= node['openstack']['network']['openvswitch']['tunnel_types'].join(',') %>
<% end %>
<% if node['openstack']['network']['openvswitch']['vxlan_udp_port'] %>
vxlan_udp_port = <%= node['openstack']['network']['openvswitch']['vxlan_udp_port']%>
<% end %>

<% if node['openstack']['network']['openvswitch']['l2_population'] %>
l2_population = <%= node['openstack']['network']['openvswitch']['l2_population']  %>
<% end %>

<% if node['openstack']['network']['openvswitch']['veth_mtu']  %>
veth_mtu = <%= node['openstack']['network']['openvswitch']['veth_mtu'] %>
<% end %>

[SECURITYGROUP]
# Firewall driver for realizing neutron security group function
# Default: firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
firewall_driver = <%= node["openstack"]["network"]["openvswitch"]["fw_driver"] %>

# Controls if neutron security group is enabled or not.
# It should be false when you use nova security group.
enable_security_group = <%= node['openstack']['network']['openvswitch']['enable_security_group'] %>

#-----------------------------------------------------------------------------
# Sample Configurations.
#-----------------------------------------------------------------------------
#
# 1. With VLANs on eth1.
# [OVS]
# network_vlan_ranges = default:2000:3999
# tunnel_id_ranges =
# integration_bridge = br-int
# bridge_mappings = default:br-eth1
# [AGENT]
# Add the following setting, if you want to log to a file
#
# 2. With tunneling.
# [OVS]
# network_vlan_ranges =
# tunnel_id_ranges = 1:1000
# integration_bridge = br-int
# tunnel_bridge = br-tun
# local_ip = 10.0.0.3
