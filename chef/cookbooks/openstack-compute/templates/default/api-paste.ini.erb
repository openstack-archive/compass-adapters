<%= node["openstack"]["compute"]["custom_template_banner"] %>

############
# Metadata #
############
[composite:metadata]
use = egg:Paste#urlmap
/: meta

[pipeline:meta]
<% if node["openstack"]["compute"]["enabled_apis"].include?("ec2") %>
pipeline = ec2faultwrap logrequest metaapp
<% else -%>
pipeline = faultwrap metaapp
<% end -%>

[app:metaapp]
paste.app_factory = nova.api.metadata.handler:MetadataRequestHandler.factory

<% if node["openstack"]["compute"]["enabled_apis"].include?("ec2") -%>
#######
# EC2 #
#######

[composite:ec2]
use = egg:Paste#urlmap
/services/Cloud: ec2cloud

[composite:ec2cloud]
use = call:nova.api.auth:pipeline_factory
noauth = ec2faultwrap logrequest ec2noauth cloudrequest validator ec2executor
keystone = ec2faultwrap logrequest ec2keystoneauth cloudrequest validator ec2executor

[filter:ec2faultwrap]
paste.filter_factory = nova.api.ec2:FaultWrapper.factory

[filter:logrequest]
paste.filter_factory = nova.api.ec2:RequestLogging.factory

[filter:ec2lockout]
paste.filter_factory = nova.api.ec2:Lockout.factory

[filter:ec2keystoneauth]
paste.filter_factory = nova.api.ec2:EC2KeystoneAuth.factory

[filter:ec2noauth]
paste.filter_factory = nova.api.ec2:NoAuth.factory

[filter:cloudrequest]
controller = nova.api.ec2.cloud.CloudController
paste.filter_factory = nova.api.ec2:Requestify.factory

[filter:authorizer]
paste.filter_factory = nova.api.ec2:Authorizer.factory

[filter:validator]
paste.filter_factory = nova.api.ec2:Validator.factory

[app:ec2executor]
paste.app_factory = nova.api.ec2:Executor.factory
<% end -%>

#############
# Openstack #
#############

[composite:osapi_compute]
use = call:nova.api.openstack.urlmap:urlmap_factory
/: oscomputeversions
/v1.1: openstack_compute_api_v2
/v2: openstack_compute_api_v2
<% if node['openstack']['compute']['composite']['osapi_compute']['v3'] -%>
/v3: <%= node['openstack']['compute']['composite']['osapi_compute']['v3'] %>
<% end -%>

[composite:openstack_compute_api_v2]
use = call:nova.api.auth:pipeline_factory
noauth = faultwrap sizelimit noauth ratelimit osapi_compute_app_v2
keystone = faultwrap sizelimit authtoken keystonecontext ratelimit osapi_compute_app_v2
keystone_nolimit = faultwrap sizelimit authtoken keystonecontext osapi_compute_app_v2

[filter:faultwrap]
paste.filter_factory = nova.api.openstack:FaultWrapper.factory

[filter:noauth]
paste.filter_factory = nova.api.openstack.auth:NoAuthMiddleware.factory

[filter:ratelimit]
paste.filter_factory = nova.api.openstack.compute.limits:RateLimitingMiddleware.factory
limits =
<%= node["openstack"]["compute"]["ratelimit"]["settings"].values.inject([]) { |output,v| output << "  ( #{v['verb']}, #{v['uri']}, #{v['regex']}, #{v['limit']}, #{v['interval']} )" }.join(";\n") %>

[filter:sizelimit]
paste.filter_factory = nova.api.sizelimit:RequestBodySizeLimiter.factory

[app:osapi_compute_app_v2]
paste.app_factory = nova.api.openstack.compute:APIRouter.factory

[pipeline:oscomputeversions]
pipeline = faultwrap oscomputeversionapp

[app:oscomputeversionapp]
paste.app_factory = nova.api.openstack.compute.versions:Versions.factory

<% if node['openstack']['compute']['composite']['osapi_compute']['v3'] -%>
<% if node['openstack']['compute']['composite']["#{node['openstack']['compute']['composite']['osapi_compute']['v3']}"] -%>
[composite:<%= node['openstack']['compute']['composite']['osapi_compute']['v3'] %>]
use = <%= node['openstack']['compute']['composite']["#{node['openstack']['compute']['composite']['osapi_compute']['v3']}"]['use'] %>
keystone = <%= node['openstack']['compute']['composite']["#{node['openstack']['compute']['composite']['osapi_compute']['v3']}"]['keystone'].join(' ') %>
noauth = <%= node['openstack']['compute']['composite']["#{node['openstack']['compute']['composite']['osapi_compute']['v3']}"]['noauth'].join(' ') %>
keystone_nolimit = <%= node['openstack']['compute']['composite']["#{node['openstack']['compute']['composite']['osapi_compute']['v3']}"]['keystone_nolimit'].join(' ') %>
<% end -%>
<% end -%>

<% node["openstack"]["compute"]["filter"].each do |key, value| -%>
[filter:<%= key %>]
paste.filter_factory = <%= value %>
<% end -%>

<% node["openstack"]["compute"]["app"].each do |key, value| -%>
[app:<%= key %>]
paste.app_factory = <%= value %>
<% end -%>

##########
# Shared #
##########

[filter:keystonecontext]
paste.filter_factory = nova.api.auth:NovaKeystoneContext.factory

[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
auth_uri = <%= @auth_uri %>
auth_host = <%= @identity_admin_endpoint.host %>
auth_port = <%= @identity_admin_endpoint.port %>
auth_protocol = <%= @identity_admin_endpoint.scheme %>
auth_version = <%= node["openstack"]["compute"]["api"]["auth"]["version"] %>
admin_tenant_name = <%= node["openstack"]["compute"]["service_tenant_name"] %>
admin_user = <%= node["openstack"]["compute"]["service_user"] %>
admin_password = <%= @service_pass %>
signing_dir = <%= node["openstack"]["compute"]["api"]["auth"]["cache_dir"] %>

<% if node["openstack"]["compute"]["misc_paste"] -%>
########
# Misc #
########

<% node["openstack"]["compute"]["misc_paste"].each do |m| -%>
<%= m %>
<% end -%>
<% end -%>
